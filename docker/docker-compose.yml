version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: housing_econometrics_db
    environment:
      POSTGRES_DB: housing_econometrics
      POSTGRES_USER: econometrics_user
      POSTGRES_PASSWORD: econometrics_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - econometrics_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U econometrics_user -d housing_econometrics"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache and Message Broker
  redis:
    image: redis:7-alpine
    container_name: housing_econometrics_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - econometrics_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Application
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: housing_econometrics_api
    environment:
      - DATABASE_URL=postgresql://econometrics_user:econometrics_pass@postgres:5432/housing_econometrics
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - HOST=0.0.0.0
      - PORT=8000
      - RELOAD=true
      - LOG_LEVEL=info
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
      - ../results:/app/results
      - ../econometric:/app/econometric
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - econometrics_network
    restart: unless-stopped

  # Celery Worker for Background Tasks
  celery_worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: housing_econometrics_celery
    command: celery -A api.core.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://econometrics_user:econometrics_pass@postgres:5432/housing_econometrics
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-change-in-production
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
      - ../results:/app/results
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - econometrics_network
    restart: unless-stopped

  # Celery Beat for Scheduled Tasks
  celery_beat:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: housing_econometrics_celery_beat
    command: celery -A api.core.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://econometrics_user:econometrics_pass@postgres:5432/housing_econometrics
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-change-in-production
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - econometrics_network
    restart: unless-stopped

  # Flower for Celery Monitoring
  flower:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: housing_econometrics_flower
    command: celery -A api.core.celery_app flower --port=5555
    environment:
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - econometrics_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  econometrics_network:
    driver: bridge
